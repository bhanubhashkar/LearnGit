#####------------------------------------------------------------------------------------------------------#####
#####----- Commands ---------------------------------------------------------------------------------------#####

Commands :
1. cd /path/details
    To change the current working directory
2. mkdir FolderOne FolderTwo
    To create folder(by above two folder will be created)
3. git --version
    To check the git version
4. touch TestOne.txt TestTwo.txt
    To create files(by above two files will be created)


ls -la
To list all files/folder including hidden ones inside current working directory.

cd
To go to root directory of the mechine

cd ..
To go one step back in current working directory.

pwd
Shows working directory (Print Working Directory).

cat .gitconfig
Show all git config.


git status
To check current repository status.

git init
To initialise git repository (only one time perrepositoy).

git add TestOne.txt
Start tracking the file and move to staging Area.

git add .
Start tracking all the file from current directory and move to staging Area.

git commit -m "message to be added"
Commit changes with message.

git log
To check the commit logs in detail.

git log --oneline
To check the commit logs in short.

git config --global user.name "Bhanu Bhashkar"
To set user name

git config --global user.email "reachoutbhanu@gmail.com"
To set user email

git config --global core.editor "code --wait"
To set user name

git branch
Shows all branches are current branch where we are pointing to.

git branch branch-name
Creates a new branch.

git checkout branch-name
git switch branch-name
To change current pointer to other branch.

git checkout -b branch-name
git switch -c branch-name
To create a branch and change current pointer to thw new one.

git merge branch-name -m "message to be added"
To merge given branch to the current working branch. (bringing something to current)

git branch -d branch-name
To delete the given branch name.

git diff --staged
To chcek the difference between staged file since last commited file.

git diff branchOne bravhTwo
To chcek the difference between two given branches.

git stash
Stash the uncommited code.

git stsh list 
To see all stashed code list.

git stash pop
To unstash the stashed code. (can be poped to another branch also)

git stash apply stash@{index}
To unstash or pop code from stashed list 


git checkout commit-hash-code 
To check file older version by giving commit hash code. Move the HEAD to older commit/node. 

git switch branch-name
git reflog
Move the HEAD back to the original node/commit. 

git switch branch-name


git checkout HEAD~NumberLike-1-2
Move head back by the given no of commits.

git restore fil-name
Get back to last commit version





#####------------------------------------------------------------------------------------------------------#####